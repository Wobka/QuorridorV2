int main() {
    struct joueur j1;
    j1.x = 1;
    j1.y = 5;
    j1.bar = 10;
    j1.x_pre = j1.x;
    j1.y_pre = j1.y;
    j1.temps_total = 0;  // Initialiser le temps total de J1
    j1.annuler = 0;

    struct joueur j2;
    j2.x = 9;
    j2.y = 5;
    j2.bar = 10;
    j2.x_pre = j2.x;
    j2.y_pre = j2.y;
    j2.temps_total = 0;  // Initialiser le temps total de J2
    j2.annuler = 0;

    // Initialisation des positions des barrières
    for (int i = 0; i < 10; i++) {
        j1.tab[i].x1 = 20;
        j1.tab[i].y1 = i * 3 + 5;
        j1.tab[i].x2 = 21;
        j1.tab[i].y2 = i * 3 + 5;
    }
    for (int i = 0; i < 10; i++) {
        j2.tab[i].x1 = 23;
        j2.tab[i].y1 = i * 3 + 5;
        j2.tab[i].x2 = 24;
        j2.tab[i].y2 = i * 3 + 5;
    }

    for (int i = 0; i < 1000; i += 100) {
        plateau(j1, j2, i);

        // Timer pour J1
        time_t debut_timer = time(NULL);
        j1 = tour(j1);
        j1.temps_total += difftime(time(NULL), debut_timer);  // Ajouter le temps du tour à J1
        printf("Temps total de J1 après ce tour: %.2f secondes\n", j1.temps_total);

        plateau(j1, j2, i + 50);

        // Timer pour J2
        debut_timer = time(NULL);
        j2 = tour(j2);
        j2.temps_total += difftime(time(NULL), debut_timer);  // Ajouter le temps du tour à J2
        printf("Temps total de J2 après ce tour: %.2f secondes\n", j2.temps_total);
    }

    return 0;
}
